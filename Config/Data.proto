
syntax = "proto3";
option csharp_namespace = "Config";

enum TriggerPosType {
	TriggerPosType_none = 0;  // 无
	TriggerPosType_oneself = 1;  // 自身
	TriggerPosType_target = 2;  // 目标

}

enum Shape {
	Shape_NONE = 0;  // 无
	Shape_CIRCLE = 1;  // 圆形
	Shape_SECTOR = 2;  // 扇形

}

enum RangeType {
	RangeType_none = 0;  // 无
	RangeType_straightline = 1;  // 直线(距离)
	RangeType_sector = 2;  // 扇形(角度,半径)
	RangeType_roundness = 3;  // 圆形区域(半径)
	RangeType_rectangle = 4;  // 矩形(长，宽)
	RangeType_multi_direction = 5;  // 多方向射击

}

enum EffectType {
	EffectType_none = 0;  // 无
	EffectType_general_harm = 1;  // 普通伤害
	EffectType_harm = 2;  // 爆炸伤害
	EffectType_effect = 3;  // 治疗效果
	EffectType_death = 4;  // 即死

}

enum ConversionType {
	ConversionType_none = 0;  // 无
	ConversionType_fixed = 1;  // 固定值
	ConversionType_percentage = 2;  // 百分比

}

enum BuffStatusType {
	BuffStatusType_none = 0;  // 无
	BuffStatusType_bleed = 1;  // 流血
	BuffStatusType_firing = 2;  // 灼烧
	BuffStatusType_entangle = 3;  // 减速
	BuffStatusType_immobilize = 4;  // 定身
	BuffStatusType_stun = 5;  // 晕眩
	BuffStatusType_silence = 6;  // 沉默
	BuffStatusType_sleep = 7;  // 睡眠
	BuffStatusType_fear = 8;  // 恐惧
	BuffStatusType_poisoning = 9;  // 中毒
	BuffStatusType_invincible = 10;  // 无敌
	BuffStatusType_lower_def = 11;  // 降低防御力
	BuffStatusType_lower_accuracy = 12;  // 降低命中率
	BuffStatusType_continue_regain = 13;  // 持续恢复
	BuffStatusType_enhance_def = 14;  // 增加防御力
	BuffStatusType_enhance_atk = 15;  // 增加攻击力
	BuffStatusType_death = 16;  // 即死
	BuffStatusType_freeze = 17;  // 冰冻
	BuffStatusType_paralysis = 18;  // 麻痹
	BuffStatusType_stupid = 19;  // 瘫痪(痴呆)
	BuffStatusType_disarm = 20;  // 缴械
	BuffStatusType_shield = 21;  // 护盾
	BuffStatusType_leech_life = 22;  // 吸血
	BuffStatusType_transform = 23;  // 变身/变形

}

enum ItemDetailType {
	ItemDetailType_none = 0;  // 无

}

enum RoleType {
	RoleType_None = 0;  // 无
	RoleType_Player = 1;  // 英雄
	RoleType_Enemy = 2;  // 怪物
	RoleType_Neutral = 4;  // 中立
	RoleType_Bunker = 8;  // 堡垒
	RoleType_Trigger = 16;  // 触发器

}

enum TargetSelectType {
	TargetSelectType_none = 0;  // 无
	TargetSelectType_nearest = 1;  // 最近
	TargetSelectType_farthest = 2;  // 最远
	TargetSelectType_hp_least = 3;  // 最低血量
	TargetSelectType_hp_maximum = 4;  // 最高血量
	TargetSelectType_battle_ability_max = 5;  // 最高战力
	TargetSelectType_random = 6;  // 随机

}

enum BuffType {
	BuffType_none = 0;  // 无
	BuffType_buff = 1;  // 增益
	BuffType_debuff = 2;  // 减益

}

enum TargetCampType {
	TargetCampType_none = 0;  // 无
	TargetCampType_we = 1;  // 我方
	TargetCampType_enemy = 2;  // 敌方
	TargetCampType_oneself = 3;  // 自身
	TargetCampType_all = 4;  // 全体

}


message MoveActionTimelineNode
{
	int32 ID = 1;
	int32 Start = 2;
	int32 Duration = 3;
	repeated int32 AnimationMove = 4;
	bool Enable = 5;

}

message InputActionTimelineNode
{
	int32 ID = 1;
	int32 Start = 2;
	int32 Duration = 3;
	bool Enable = 4;

}

message BuffConfig
{
	int32 ID = 1;
	BuffType Type = 2;
	string Name = 3;
	BuffStatusType Status = 4;
	TargetCampType Target = 5;
	int32 Count = 6;
	int32 During = 7;
	int32 Tick = 8;
	int32 CompulsoryLift = 9;
	RangeType TriggerRangeType = 10;
	int32 Range = 11;
	EffectType DamageEffectType = 12;
	int32 DamageEffectValue = 13;
	ItemDetailType AddtiveEffectType = 14;
	int32 AddtiveEffectFactor = 15;
	int32 LimitAbility = 16;
	int32 ShieldValue = 17;
	ConversionType LeechLifeType = 18;
	int32 LeechLifeParam = 19;
	int32 TransformID = 20;
	repeated int32 TransformAttackArr = 21;
	repeated int32 TransformSkillArr = 22;

}

message AbilityConfig
{
	int32 ID = 1;
	string Path = 2;
	string Asset = 3;
	repeated repeated string Test = 4;

}

message VectorInt3
{
	int32 ID = 1;
	int32 X = 2;
	int32 Y = 3;
	int32 Z = 4;

}

message AbilityEffect
{
	int32 ID = 1;
	TargetCampType TargetType = 2;
	TriggerPosType TriggerPosType = 3;
	int32 TriggerDelay = 4;
	int32 TriggerTick = 5;
	RangeType TriggerRangeType = 6;
	TargetSelectType TargetSelectType = 7;
	int32 TargetAmount = 8;
	int32 Start = 9;
	int32 Duration = 10;
	Shape Shape = 11;
	int32 Range = 12;
	VectorInt3 Direction = 13;
	repeated int32 EffectID = 14;

}

message HitCheckInfo
{
	int32 ID = 1;
	int32 Start = 2;
	int32 HitHeight = 3;
	int32 ValidHitHeight = 4;
	RangeType RangeType = 5;
	int32 Range = 6;
	int32 Radius = 7;
	int32 Angle = 8;
	int32 Length = 9;
	int32 Width = 10;
	VectorInt3 CenterOffset = 11;
	int32 HorizontalSpeed = 12;
	int32 HorizontalAcceleratedASpeed = 13;
	int32 Duration = 14;
	int32 VerticalSpeed = 15;
	int32 VerticalAcceleratedSpeed = 16;
	int32 HitDamagePec = 17;
	int32 HitDamageBasics = 18;

}

message LockActionNode
{
	int32 ID = 1;
	int32 Start = 2;
	int32 Duration = 3;

}

message RoleConfig
{
	int32 ID = 1;
	string ModelPath = 2;
	string ModelName = 3;
	repeated int32 Melees = 4;
	repeated int32 Ability = 5;
	repeated int32 AvoidAbility = 6;
	int32 Radius = 7;
	int32 BaseHP = 8;
	int32 BaseAttack = 9;
	int32 BaseDefend = 10;
	int32 GrowHPByLevel = 11;
	int32 GrowAttackByLevel = 12;
	int32 GrowDefendByLevel = 13;
	int32 GrowHPByStar = 14;
	int32 GrowAttackByStar = 15;
	int32 GrowDefendByStar = 16;
	RoleType RoleType = 17;

}

message Timeline
{
	int32 ID = 1;
	int32 TICK_INTERVAL = 2;
	bool IsLoop = 3;
	bool CanInput = 4;
	int32 Duration = 5;
	int32 ReadyTime = 6;
	int32 RecoverTime = 7;
	repeated HitCheckInfo HitTimeList = 8;
	repeated LockActionNode LockAcionList = 9;
	InputActionTimelineNode InputActionTimelineNode = 10;
	MoveActionTimelineNode MoveActionTimelineNode = 11;
	repeated AbilityEffect AbilityEffectNodeInfo = 12;
	int32 ComboOverTime = 13;

}


message DataHelper 
{
    repeated string messageType = 1;
	map<int32, MoveActionTimelineNode> MoveActionTimelineNode_dict = 2;
	map<int32, InputActionTimelineNode> InputActionTimelineNode_dict = 3;
	map<int32, BuffConfig> BuffConfig_dict = 4;
	map<int32, AbilityConfig> AbilityConfig_dict = 5;
	map<int32, VectorInt3> VectorInt3_dict = 6;
	map<int32, AbilityEffect> AbilityEffect_dict = 7;
	map<int32, HitCheckInfo> HitCheckInfo_dict = 8;
	map<int32, LockActionNode> LockActionNode_dict = 9;
	map<int32, RoleConfig> RoleConfig_dict = 10;
	map<int32, Timeline> Timeline_dict = 11;

}
