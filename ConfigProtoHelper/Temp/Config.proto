
syntax = "proto3";
option csharp_namespace = "Config";

enum AbilityStageClass {
    AbilityStageClass_NONE = 0;
    AbilityStageClass_CASTANIMATION = 1;
    AbilityStageClass_CASTPOINT = 2;
    AbilityStageClass_CASTBACKSWING = 3;
    AbilityStageClass_CASTMOVESWING = 4;

}

enum ItemDetailType {
    ItemDetailType_NONE = 0;

}

enum RoleCategory {
    RoleCategory_NONE = 0;
    RoleCategory_HUMAN = 1;
    RoleCategory_VIRTUAL = 2;
    RoleCategory_METAL = 3;

}

enum RoleType {
    RoleType_NONE = 0;
    RoleType_PLAYER = 1;
    RoleType_ENEMY = 2;
    RoleType_NEUTRAL = 4;
    RoleType_BUNKER = 8;
    RoleType_TRIGGER = 16;
    RoleType_TRAP = 32;
    RoleType_BOX = 64;
    RoleType_FRIEND = 128;

}

enum BuffClass {
    BuffClass_NONE = 0;
    BuffClass_STATUS_TYPE_SLOW = 1;
    BuffClass_STATUS_TYPE_BLIND = 2;
    BuffClass_STATUS_TYPE_CHAOS = 3;
    BuffClass_STATUS_TYPE_DISARM = 4;
    BuffClass_STATUS_TYPE_SILENT = 5;
    BuffClass_STATUS_TYPE_STOP = 6;
    BuffClass_STATUS_TYPE_FROST = 7;
    BuffClass_STATUS_TYPE_SWIM = 8;
    BuffClass_STATUS_TYPE_PARALYSIS = 9;
    BuffClass_STATUS_TYPE_THORNS = 10;
    BuffClass_STATUS_TYPE_FRAIL = 11;
    BuffClass_STATUS_TYPE_LOCK = 12;
    BuffClass_STATUS_TYPE_BLOOD = 13;
    BuffClass_STATUS_TYPE_POISON = 14;
    BuffClass_STATUS_TYPE_FIRING = 15;
    BuffClass_STATUS_TYPE_FEEBLE = 16;
    BuffClass_STATUS_TYPE_BABA = 17;
    BuffClass_STATUS_TYPE_SUPERARMOR = 18;
    BuffClass_STATUS_TYPE_RECOVER = 19;
    BuffClass_STATUS_TYPE_MAXHP = 20;
    BuffClass_STATUS_TYPE_ATTACK = 21;
    BuffClass_STATUS_TYPE_DEFENSE = 22;
    BuffClass_STATUS_TYPE_PHYDEFENSE = 23;
    BuffClass_STATUS_TYPE_SPEDEFENSE = 24;
    BuffClass_STATUS_TYPE_DAMAGE = 25;
    BuffClass_STATUS_TYPE_ORDDAMAGE = 26;
    BuffClass_STATUS_TYPE_SKILLDAMAGE = 27;
    BuffClass_STATUS_TYPE_CRIT = 28;
    BuffClass_STATUS_TYPE_CRITDAMAGE = 29;
    BuffClass_STATUS_TYPE_COOLDOWN = 30;
    BuffClass_STATUS_TYPE_SPEED = 31;
    BuffClass_STATUS_TYPE_TENACITY = 32;
    BuffClass_STATUS_TYPE_HIT_ACTION_SPEED = 33;
    BuffClass_STATUS_TYPE_1034_1 = 103401;
    BuffClass_STATUS_TYPE_1034_2 = 103402;
    BuffClass_STATUS_TYPE_1039_1 = 103901;
    BuffClass_STATUS_TYPE_1046_1 = 104601;
    BuffClass_STATUS_TYPE_1045_1 = 104501;
    BuffClass_STATUS_TYPE_1048_1 = 104801;
    BuffClass_STATUS_TYPE_1048_2 = 104802;
    BuffClass_STATUS_TYPE_1050_1 = 105001;
    BuffClass_STATUS_TYPE_1066_1 = 106601;
    BuffClass_STATUS_TYPE_1066_2 = 106602;
    BuffClass_STATUS_TYPE_1066_3 = 106603;
    BuffClass_STATUS_TYPE_1066_4 = 106604;
    BuffClass_STATUS_TYPE_1066_5 = 106605;
    BuffClass_STATUS_TYPE_1066_6 = 106606;

}

enum AbilityDetailClass {
    AbilityDetailClass_NONE = 0;
    AbilityDetailClass_LIGHTATTACK = 1;
    AbilityDetailClass_SKILL = 2;
    AbilityDetailClass_AVOID = 3;
    AbilityDetailClass_DEAD = 4;
    AbilityDetailClass_DEFENSE = 5;
    AbilityDetailClass_SKILLMOVE = 6;
    AbilityDetailClass_HEAVYATTACK = 7;
    AbilityDetailClass_ULTIMATE = 8;
    AbilityDetailClass_RUN = 9;
    AbilityDetailClass_IDLE = 10;
    AbilityDetailClass_ENDURE = 11;
    AbilityDetailClass_HIT = 12;
    AbilityDetailClass_MONSTERELITEATTACK = 13;
    AbilityDetailClass_MONSTERELITESKILL = 14;
    AbilityDetailClass_CHARGE = 15;
    AbilityDetailClass_MONSTERSKILL = 16;
    AbilityDetailClass_HITGROUND = 17;
    AbilityDetailClass_FALLGROUND = 18;

}

enum TriggerEventType {
    TriggerEventType_MAPINIT  = 0;
    TriggerEventType_UNITENTERAREA  = 1;
    TriggerEventType_UNITDIE  = 2;
    TriggerEventType_UNITATTRCHANGE  = 3;
    TriggerEventType_UNITPREPARECAST  = 4;
    TriggerEventType_CHANGEATTARGE  = 5;
    TriggerEventType_UNITACCEPTDAMAGE  = 6;

}

enum ConversionType {
    ConversionType_NONE = 0;
    ConversionType_FIXED = 1;
    ConversionType_PERCENTAGE = 2;

}

enum ShapePartType {
    ShapePartType_BODY = 0;
    ShapePartType_FORELEG = 1;
    ShapePartType_HINDLEG = 2;

}

enum Shape {
    Shape_NONE = 0;
    Shape_CIRCLE = 1;
    Shape_SECTOR = 2;

}

enum AbilitySpaceClass {
    AbilitySpaceClass_NONE = 0;
    AbilitySpaceClass_GROUND = 1;
    AbilitySpaceClass_AIR = 2;

}

enum RangeType {
    RangeType_NONE = 0;
    RangeType_STRAIGHTLINE = 1;
    RangeType_SECTOR = 2;
    RangeType_ROUNDNESS = 3;
    RangeType_RECTANGLE = 4;
    RangeType_MULTI_DIRECTION = 5;

}

enum TriggerPosType {
    TriggerPosType_NONE = 0;
    TriggerPosType_ONESELF = 1;
    TriggerPosType_TARGET = 2;

}

enum BuffStatusType {
    BuffStatusType_NONE = 0;
    BuffStatusType_BLEED = 1;
    BuffStatusType_FIRING = 2;
    BuffStatusType_ENTANGLE = 3;
    BuffStatusType_IMMOBILIZE = 4;
    BuffStatusType_STUN = 5;
    BuffStatusType_SILENCE = 6;
    BuffStatusType_SLEEP = 7;
    BuffStatusType_FEAR = 8;
    BuffStatusType_POISONING = 9;
    BuffStatusType_INVINCIBLE = 10;
    BuffStatusType_LOWER_DEF = 11;
    BuffStatusType_LOWER_ACCURACY = 12;
    BuffStatusType_CONTINUE_REGAIN = 13;
    BuffStatusType_ENHANCE_DEF = 14;
    BuffStatusType_ENHANCE_ATK = 15;
    BuffStatusType_DEATH = 16;
    BuffStatusType_FREEZE = 17;
    BuffStatusType_PARALYSIS = 18;
    BuffStatusType_STUPID = 19;
    BuffStatusType_DISARM = 20;
    BuffStatusType_SHIELD = 21;
    BuffStatusType_LEECH_LIFE = 22;
    BuffStatusType_TRANSFORM = 23;

}

enum DeathTimeType {
    DeathTimeType_IMMEDIATELYDEATH = 0;
    DeathTimeType_WAITHITRECOVER = 1;
    DeathTimeType_WAITGETUP = 2;

}

enum WeaponCategory {
    WeaponCategory_NONE = 0;
    WeaponCategory_GLOVES = 1;
    WeaponCategory_TACHI = 2;
    WeaponCategory_WHIP = 3;
    WeaponCategory_QUITE = 4;

}

enum BuffType {
    BuffType_NONE = 0;
    BuffType_BUFF = 1;
    BuffType_DEBUFF = 2;

}

enum EffectType {
    EffectType_NONE = 0;
    EffectType_GENERAL_HARM = 1;
    EffectType_HARM = 2;
    EffectType_EFFECT = 3;
    EffectType_DEATH = 4;

}

enum TargetCampType {
    TargetCampType_NONE = 0;
    TargetCampType_WE = 1;
    TargetCampType_ENEMY = 2;
    TargetCampType_ONESELF = 3;
    TargetCampType_ALL = 4;

}

enum TargetSelectType {
    TargetSelectType_NONE = 0;
    TargetSelectType_NEAREST = 1;
    TargetSelectType_FARTHEST = 2;
    TargetSelectType_HP_LEAST = 3;
    TargetSelectType_HP_MAXIMUM = 4;
    TargetSelectType_BATTLE_ABILITY_MAX = 5;
    TargetSelectType_RANDOM = 6;

}


message Auto_Generate_Ability_State_Index
{
    int32 ID = 1;
    int32 GroupIndex = 2;
    string Describe = 3;

}

message HitCheckInfo
{
    int32 HitCheckID = 1;
    int32 Start = 2;
    int32 RangeType = 3;
    int32 Range = 4;
    int32 Radius = 5;
    int32 Angle = 6;
    int32 Length = 7;
    int32 Width = 8;
    int32 CenterOffset = 9;
    int32 HorizontalOffset = 10;
    int32 HorizontalSpeed = 11;
    int32 HorizontalAcceleratedASpeed = 12;
    int32 VerticalSpeed = 13;
    int32 VerticalAcceleratedSpeed = 14;
    int32 HitHeight = 15;
    int32 ValidHitHeight = 16;
    int32 HorizontalSpeedOnFloat = 17;
    int32 Duration = 18;
    int32 AttackerKartunTime = 19;
    int32 HitKartunTime = 20;
    int32 IgnoreHitHistory = 21;
    int32 IsUseAttackerDirection = 22;
    int32 HitDownDuration = 23;
    int32 IsThump = 24;
    int32 NoReoverHitKartunTime = 25;
    int32 UseHitDownDuration = 26;
    int32 IsLargeHitBack = 27;
    int32 IsTargetChangeSpeed = 28;
    int32 TargetSpeed = 29;
    int32 ChangeSpeedTime = 30;

}

message AbilitySpeedInfo
{
    int32 Start = 1;
    int32 Duration = 2;
    int32 AbilitySpeedByTimeline = 3;

}

message TalkContent
{
    int32 ID = 1;
    string Speaker = 2;
    string Content = 3;
    int32 Delta = 4;

}

message Timeline
{
    int32 TICK_INTERVAL = 1;
    int32 ID = 2;
    int32 IsLoop = 3;
    int32 Duration = 4;
    int32 RecoverTime = 5;
    int32 ComboOverTime = 6;
    int32 IsFinalAction = 7;
    int32 IsNeedLock = 8;
    int32 IsUseConfigY = 9;
    int32 IsUseConfigX = 10;
    int32 ThrownIgnoreGraph = 11;
    int32 ThrownCanOutRange = 12;
    int32 ThrownOutRangeSpawnID = 13;
    int32 ArrivedCreateThrownTimelineID = 14;
    int32 IsDependCasterForThrown = 15;
    int32 UseTangentMove = 16;
    int32 UseDefaultCamera = 17;
    int32 UseCameraMove = 18;
    int32 TransformActionInfo = 19;
    int32 RangeType = 20;
    int32 Radius = 21;
    int32 Angle = 22;
    int32 Length = 23;
    int32 Width = 24;
    int32 StartFrame = 25;
    int32 EndFrame = 26;
    int32 IsCustomAttackPoint = 27;
    int32 CustomAttackPointDistance = 28;
    int32 CDCompensationList = 29;
    int32 PostSpwanThrownEvents = 30;
    int32 PostDespownThronEvents = 31;
    int32 HitTimeList = 32;
    int32 MoveActionTimelineNode = 33;
    int32 InputActionTimelineNode = 34;
    int32 LockAcionList = 35;
    int32 ThrownCollisionCheckInfoList = 36;
    int32 ThrownLockActionInfoList = 37;
    int32 CameraTypeInfoList = 38;
    int32 ThrownBackActionInfoList = 39;
    int32 ShapeEnableInfoList = 40;
    int32 AbilityStateInfoList = 41;
    int32 AbilitySpeedInfoList = 42;
    int32 ShapeInfoList = 43;
    int32 ExportRelativeDisplacement = 44;

}

message ShapeInfo
{
    int32 Start = 1;
    int32 Duration = 2;
    int32 ShapeItemInfoList = 3;

}

message Auto_Generate_Interrupt_Self
{
    int32 ID = 1;
    bool CanInterrupt = 2;

}

message VectorInt3
{
    int32 X = 1;
    int32 Y = 2;
    int32 Z = 3;

}

message ShapeItemInfo
{
    int32 ShapePartType = 1;
    int32 Offset = 2;
    int32 Size = 3;
    int32 Enable = 4;

}

message AbilityConfig
{
    int32 ID = 1;
    int32 CD = 2;
    int32 MaxUseCount = 3;
    int32 AbilityClass = 4;
    repeated int32 HitDamageBasics = 5;
    repeated int32 HitDamagePec = 6;
    repeated int32 PostureValueConsume = 7;
    repeated int32 BalanceValueConsume = 8;
    int32 LastHit = 9;
    repeated int32 RelateSkill = 10;

}

message RoleConfig
{
    int32 ID = 1;
    repeated int32 AdditionalRoleIDs = 2;
    RoleCategory RoleCategory = 3;
    repeated ShapePartType ShapePartTypes = 4;
    repeated int32 Radius = 5;
    int32 CameraDistance = 6;
    int32 CameraHeight = 7;
    int32 CameraLookAtHeight = 8;
    DeathTimeType DeathTime = 9;
    string ModelPath = 10;
    string ModelName = 11;
    repeated int32 Melees = 12;
    repeated int32 Ability = 13;
    repeated int32 RageAbility = 14;
    repeated int32 AvoidAbility = 15;
    int32 BaseHP = 16;
    int32 BaseAttack = 17;
    int32 BaseDefend = 18;
    int32 GrowHPByLevel = 19;
    int32 GrowAttackByLevel = 20;
    int32 GrowDefendByLevel = 21;
    int32 GrowHPByStar = 22;
    int32 GrowAttackByStar = 23;
    bool UseRunMoveCurve = 24;
    int32 Speed = 25;
    int32 GrowDefendByStar = 26;
    RoleType RoleType = 27;
    repeated int32 HitRecoverID = 28;
    int32 HitBackRecoverID = 29;
    int32 HitAirID = 30;
    int32 HitUpID = 31;
    int32 HitDownID = 32;
    int32 HitFloorID = 33;
    int32 GetUpID = 34;
    int32 HitUpAirID = 35;
    int32 Run = 36;
    int32 Idle = 37;
    int32 Weight = 38;
    int32 RunLeft = 39;
    int32 RunRight = 40;
    int32 Death = 41;
    int32 NoAnimationDeath = 42;
    int32 AirDeath = 43;
    int32 Appear = 44;
    int32 MovementStop = 45;
    bool CanHitBack = 46;
    bool CanHitUp = 47;
    bool UseRushMoveCurve = 48;
    int32 RushID = 49;
    int32 RushStopID = 50;
    int32 RushSpeed = 51;
    repeated int32 HitBackValidTime = 52;
    int32 BalanceValue = 53;

}

message buff
{
    int32 ID = 1;
    int32 buff_id = 2;
    string name = 3;
    string remark = 4;
    int32 type = 5;
    int32 sub_type = 6;
    int32 damage_type = 7;
    int32 keep_time = 8;
    int32 floor = 9;
    int32 sub_floor = 10;

}

message LockActionNode
{
    int32 Start = 1;
    int32 Duration = 2;

}

message Auto_Generate_Interrupt_Other
{
    int32 ID = 1;
    bool CanInterrupt = 2;

}

message TimelineRootMotionConfig
{
    int32 ID = 1;
    int32 ModelID = 2;
    string ActionName = 3;
    int32 Y_BakeIntoPose = 4;
    int32 Y_OriginalOrRootNode = 5;
    int32 XZ_BakeIntoPose = 6;
    int32 XZ_OriginalOrRootNode = 7;

}

message ShapeEnableInfo
{
    int32 Start = 1;
    int32 Duration = 2;
    int32 IsEnable = 3;

}

message InterestConfig
{
    int32 ID = 1;
    repeated RoleType Group = 2;

}

message ThrownCollisionCheckInfo
{
    int32 Start = 1;
    int32 Duration = 2;
    int32 RangeType = 3;
    int32 Radius = 4;
    int32 Angle = 5;
    int32 Length = 6;
    int32 Width = 7;
    int32 Height = 8;
    int32 CenterOffset = 9;
    int32 IgnoreHitHistory = 10;
    int32 ThrownBehaviourOnCollision = 11;
    int32 SpawnThrownTimelineID = 12;
    int32 ChangeTargetCountLimit = 13;

}

message HitAudio
{
    int32 ID = 1;
    WeaponCategory WeaponCategory = 2;
    RoleCategory RoleCategory = 3;
    string AudioClipPath = 4;

}

message MoveActionTimelineNode
{
    int32 Enable = 1;
    int32 Start = 2;
    int32 Duration = 3;
    int32 AnimationMove = 4;

}

message ThrownLockActionInfo
{
    int32 Start = 1;
    int32 Duration = 2;
    int32 RangeType = 3;
    int32 Radius = 4;
    int32 Angle = 5;
    int32 Length = 6;
    int32 Width = 7;
    int32 Height = 8;
    int32 CenterOffset = 9;
    int32 ThrownBehaviourOnCollision = 10;
    int32 SpawnThrownTimelineID = 11;
    int32 ChangeTargetCountLimit = 12;
    int32 TurnRate = 13;
    int32 LockEndOperation = 14;

}

message Int3
{
    int32 x = 1;
    int32 y = 2;
    int32 z = 3;

}

message PostDespawnThrownEventInfo
{
    int32 Start = 1;
    int32 ID = 2;

}

message CDCompensationInfo
{
    int32 Start = 1;
    int32 Duration = 2;
    int32 CDCompensation = 3;

}

message Hero_Attrib
{
    int32 ID = 1;
    string varname = 2;
    string Name = 3;
    string remark = 4;

}

message InputActionTimelineNode
{
    int32 Enable = 1;
    int32 Start = 2;
    int32 Duration = 3;

}

message PostSpwanThrownEventInfo
{
    int32 Start = 1;
    int32 ID = 2;
    int32 TargetCampType = 3;
    int32 CenterOffset = 4;
    int32 SpawnForward = 5;
    int32 RangeType = 6;
    int32 Radius = 7;
    int32 Angle = 8;
    int32 Length = 9;
    int32 Width = 10;
    int32 Height = 11;
    int32 TargetSelectType = 12;
    int32 UseCommon = 13;

}

message EntityVarName
{
    int32 ID = 1;
    string Name = 2;

}

message BuffConfig
{
    int32 ID = 1;
    int32 Type = 2;
    string Name = 3;
    int32 Status = 4;
    int32 Target = 5;
    int32 Count = 6;
    int32 During = 7;
    int32 Tick = 8;
    int32 CompulsoryLift = 9;
    int32 TriggerRangeType = 10;
    int32 Range = 11;
    int32 DamageEffectType = 12;
    int32 DamageEffectValue = 13;
    int32 AddtiveEffectType = 14;
    int32 AddtiveEffectFactor = 15;
    int32 LimitAbility = 16;
    int32 ShieldValue = 17;
    int32 LeechLifeType = 18;
    int32 LeechLifeParam = 19;
    int32 TransformID = 20;
    repeated int32 TransformAttackArr = 21;
    repeated int32 TransformSkillArr = 22;

}

message CameraTypeInfo
{
    int32 Start = 1;
    int32 Duration = 2;
    int32 CameraType = 3;
    int32 EndPosition = 4;

}

message AbilityStateInfo
{
    int32 Start = 1;
    int32 Duration = 2;
    int32 AbilityStateIndex = 3;

}

message SceneMap
{
    int32 ID = 1;
    string MapDataPath = 2;
    int32 MonsterNormalLevel = 3;
    int32 MonsterElitelLevel = 4;
    int32 MonsterBossLevel = 5;
    int32 MonsterStaMultiple = 6;
    int32 MonsterAtkMultiple = 7;
    int32 MonsterRatioMultiple = 8;
    int32 MonsterBossHPStripNumber = 9;
    string ExternalParam = 10;

}

message ThrownBackActionInfo
{
    int32 Start = 1;
    int32 Duration = 2;
    int32 OnceCalc = 3;
    int32 Offset = 4;
    int32 MinSpeed = 5;
    int32 MaxSpeed = 6;

}

message TransformActionInfo
{
    int32 Start = 1;
    int32 TransformRoleID = 2;
    int32 TransformActionID = 3;

}

